#!/usr/bin/python
#
#   Author: Rohith
#   Date: 2015-04-23 11:04:44 +0100 (Thu, 23 Apr 2015)
#
#  vim:ts=2:sw=2:et
#

DOCUMENTATION='''
---
module: consul_kv
short_description: Create/delete/get Key/Values in Consul
description:
     - Create/delete/get Key/Values in Consul using HTTP interface
options:
  state:
    description:
     - Indicate desired state of the target.
    default: present
    choices: ['present', 'absent', 'get']
  consul:
     description:
     - Consul endpoint to talk to.
  token:
    description:
     - Consul token with permissions to access kv.
  key:
    description:
     - The Key
  value:
    description:
     - The Value you want to set.
  flags:
    description:
     - Consul flags you want to assign to the key. 
  dc:
    description:
     - Consul Data Center to use by kv.
notes:
  - Defaults to http://localhost:8500 consul endpoint


'''

EXAMPLES = '''
# Create a record

- consul_kv: 
    key: my_key
    value: "Hurray"

# Get a record

- consul_kv: 
    key: my_key
    state: get
  register: consul

- debug: var=consul

# Delete a record

- consul_kv: 
    key: my_key
    state: absent
'''

def main():
  module = AnsibleModule(
      argument_spec = dict(
          state     = dict(default='present', choices=['present', 'absent', 'get']),
          key       = dict(type='str', required=True),
          value     = dict(),
          token     = dict(type='str', default=""),
          flags     = dict(type='int'),
          dc        = dict(default=""),
          consul    = dict(type='str', default='http://localhost:8500/')
      )
  )
  endpoint = module.params['consul']+"v1/kv/"
  key_endpoint = endpoint + module.params['key']
  params_payload = { "token": module.params['token'] }

  g = requests.get( key_endpoint, params=params_payload )
  if g.status_code == requests.codes.ok:
      value = b64decode(g.json()[0]["Value"])

      if module.params['state'] == 'present':
        if value == module.params['value']:
            changed = False
        else:
            r = requests.put( key_endpoint, data=module.params['value'], params=params_payload)
            changed = True

      elif module.params['state'] == 'absent':
        r = requests.delete( key_endpoint, params=params_payload)
        changed = True
      elif module.params['state'] == 'get':
        changed = False

      module.exit_json(changed=changed, key=module.params['key'], value=value)

  else:
      value=module.params['value']

      if module.params['state'] == 'absent':
        changed = False
      elif module.params['state'] == 'present':
        r = requests.put( key_endpoint, data=module.params['value'], params=params_payload)
        changed = True
      if module.params['state'] == 'get':
        module.fail_json(msg="Doesn't Exist", key=module.params['key'])

      module.exit_json(changed=changed, key=module.params['key'], value=value)
     
    


from ansible.module_utils.basic import *
from base64 import b64decode
import requests
main()


